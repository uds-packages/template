{{ $healthcheck := print .const.component.title "-healthcheck"}}
component-definition:
  components:
    - control-implementations:
        - description: Control Implementation Description
          implemented-requirements:
            - control-id: ac-6.9
              description: {{ .const.component.title }} logs privileged events
              remarks: |-
                ASSESSMENT-OBJECTIVE:
                the execution of privileged functions is logged.
              uuid: {{ uuid }}
              {{- if .const.validation.enabled }}
              links:
              - href: {{ printf "'%s%s'" "#" (uuid (printf "%s-healthcheck" .const.component.title)) }}
                rel: lula
              {{ end }}
            - control-id: au-12
              description: provides audit recording capabilities to capture the following events <List All Event Types from AU-2 and AU-3>
              remarks: |
                ASSESSMENT-OBJECTIVE:
                AU-12a. audit record generation capability for the event types the system is capable of auditing (defined in AU-02_ODP[01]) is provided by [Assignment: organization-defined system components];
                AU-12b.  [Assignment: organization-defined personnel or roles] is/are allowed to select the event types that are to be logged by specific components of the system;
                AU-12c. audit records for the event types defined in AU-02_ODP[02] that include the audit record content defined in AU-03 are generated.
              uuid: {{ uuid }}
            - control-id: au-2
              description: {{ .const.component.title }} provides the capability to log 
              remarks: |
                ASSESSMENT-OBJECTIVE:
                AU-02a.  [Assignment: organization-defined event types] that the system is capable of logging are identified in support of the audit logging function;
                AU-02b. the event logging function is coordinated with other organizational entities requiring audit-related information to guide and inform the selection criteria for events to be logged;
                AU-02c.
                	AU-02c.[01]  [Assignment: organization-defined event types (subset of AU-02_ODP[01])] are specified for logging within the system;
                	AU-02c.[02] the specified event types are logged within the system [Assignment: organization-defined frequency or situation];
                AU-02d. a rationale is provided for why the event types selected for logging are deemed to be adequate to support after-the-fact investigations of incidents;
                AU-02e. the event types selected for logging are reviewed and updated [Assignment: organization-defined frequency].
              uuid: {{ uuid }}
            - control-id: au-3
              description: logs the event type, when the event occurred, where the event occurred, source of the event, outcome of event, and identities involved with the event.
              remarks: |
                ASSESSMENT-OBJECTIVE:
                AU-03a. audit records contain information that establishes what type of event occurred;
                AU-03b. audit records contain information that establishes when the event occurred;
                AU-03c. audit records contain information that establishes where the event occurred;
                AU-03d. audit records contain information that establishes the source of the event;
                AU-03e. audit records contain information that establishes the outcome of the event;
                AU-03f. audit records contain information that establishes the identity of any individuals, subjects, or objects/entities associated with the event.
              uuid: {{ uuid }}
            - control-id: au-8
              description: {{ .const.component.title }} uses timestamps on event logs.
              remarks: |
                ASSESSMENT-OBJECTIVE:
                AU-08a. internal system clocks are used to generate timestamps for audit records;
                AU-08b. timestamps are recorded for audit records that meet [Assignment: organization-defined granularity of time measurement] and that use Coordinated Universal Time, have a fixed local time offset from Coordinated Universal Time, or include the local time offset as part of the timestamp.
              uuid: {{ uuid }}
            - control-id: sc-13
              description: {{ .const.component.title }} uses the following <List FIPS Modules> FIPS modules for all cryptography actions.
              remarks: |
                ASSESSMENT-OBJECTIVE:
                SC-13a.  [Assignment: organization-defined cryptographic uses] are identified;
                SC-13b.  [Assignment: organization-defined types of cryptography] for each specified cryptographic use (defined in SC-13_ODP[01]) are implemented.
              uuid: {{ uuid }}
          props:
            - name: generation
              ns: https://docs.lula.dev/oscal/ns
              value: lula generate component --catalog-source https://raw.githubusercontent.com/GSA/fedramp-automation/refs/tags/fedramp-2.0.0-oscal-1.0.4/dist/content/rev5/baselines/json/FedRAMP_rev5_MODERATE-baseline-resolved-profile_catalog.json --component '{{ .const.component.title }}' --requirements ac-6.9,au-2,au-3,au-3.1,au-8,au-12,sc-13 --remarks assessment-objective --framework il4
            - name: framework
              ns: https://docs.lula.dev/oscal/ns
              value: il4
          source: https://raw.githubusercontent.com/GSA/fedramp-automation/refs/tags/fedramp-2.0.0-oscal-1.0.4/dist/content/rev5/baselines/json/FedRAMP_rev5_MODERATE-baseline-resolved-profile_catalog.json
          uuid: cfc9d077-62f0-51d8-a1c6-a733c70ef24e
      description: {{ .const.component.description }}
      {{- if .const.protocols }}
      protocols:
      {{- range .const.protocols }}
        - name: {{ .name }}
          {{- if .portranges }}
          port-ranges:
          {{- range .portranges}}
            - end: {{ .end }} 
              start: {{ .start }}
              transport: {{ .transport }}
          {{ end -}}
          {{ end -}}
          title: {{ .title }}
          uuid: {{ uuid }}
      {{ end -}}
      {{ end }}
      title: {{ .const.component.title }}
      type: software
      uuid: {{ uuid }}
  {{- if .const.validation.enabled }}
  back-matter: 
    resources:
    - uuid: {{ uuid (printf "%s-healthcheck" .const.component.title) }}
      rlinks:
        - href: lula.dev
      description: >-
        domain:
          type: kubernetes
          kubernetes-spec:
            resources:
            {{- range .const.validation.resources }}
            {{- if eq .type "deployment" }}
            - name: {{ .name }}
              resource-rule:
                group: apps
                name: {{ .name }}
                namespaces:
                - {{ .namespace }}
                resource: deployments
                version: v1
            {{- else if eq .type "statefulset" }}
            - name: {{ .name }}
              resource-rule:
                group: apps
                name: {{ .name }}
                namespaces:
                - {{ .namespace }}
                resource: statefulsets
                version: v1
            {{- else if eq .type "daemonset" }}
            - name: {{ .name }}
              resource-rule:
                group: apps
                name: {{ .name }}
                namespaces:
                - {{ .namespace }}
                resource: daemonsets
                version: v1 
            {{ end -}}
            {{ end }}
        provider:
          type: opa
          opa-spec:
            output:
              validation: validate.validate
              observations:
                - validate.msg
            rego: |
              package validate
              import rego.v1

              # Default values
              default validate := false
              default msg := "Not evaluated"

              # Check if the Istio Deployment is healthy
              validate if {
                  {{- range .const.validation.resources }}
                  check_{{ .type }}_{{ .name }}_health.result
                  {{ end }}
              }

              {{- range .const.validation.resources }}
              {{- if or (eq .type "statefulset") (eq .type "deployment") }}
              check_{{ .type }}_{{ .name }}_health = {"result": true, "msg": msg} if {
                input.{{ .name }}.status.readyReplicas == input.{{ .name }}.status.replicas
                msg := "{{ .name }} {{ .type }} is healthy."
              } else = {"result": false, "msg": msg} if {
                msg := "{{ .name }} {{ .type }} is not healthy."
              }
              {{- else if eq .type "daemonset" }}
              check_{{ .type }}_{{ .name }}_health = {"result": true, "msg": msg} if {
                input.{{ .name }}.status.numberReady == input.{{ .name }}.status.desiredNumberScheduled
                msg := "{{ .name }} {{ .type }} is healthy."
              } else = {"result": false, "msg": msg} if {
                msg := "{{ .name }} {{ .type }} is not healthy."
              }
              {{ end -}}
              {{ end }}
  {{ end }}
  metadata:
    last-modified: {{ timestamp }}
    oscal-version: 1.1.2
    parties:
      - links:
          - href: https://uds.defenseunicorns.com/
            rel: website
        name: Unicorn Delivery Service
        type: organization
        uuid: dc9eda65-b7dd-5086-b19e-91a627ac1988
    published: {{ timestamp }}
    remarks: Lula Generated Component Definition
    title: {{ .const.component.title }}
    version: 0.0.1
  uuid: {{ uuid }}